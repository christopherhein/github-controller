
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: keys.github.go.hein.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    description: Status of the Key
    name: Status
    type: string
  group: github.go.hein.dev
  names:
    kind: Key
    listKind: KeyList
    plural: keys
    singular: key
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Key is the Schema for the keys API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KeySpec defines the desired state of Key
          properties:
            readOnly:
              description: ReadOnly determines whether the key has write access to
                the repository
              type: boolean
            repositoryRef:
              description: RepositoryRef points to a Repository in the same Namespace
                that the Key is for
              type: string
            secretTemplate:
              description: SecretTemplate sets annotations and labels on the resulting
                Secret of this Key
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description: 'Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata. They are not queryable and should
                    be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: 'Map of string keys and values that can be used to
                    organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                nameOverride:
                  description: NameOverride optionally specifies the name the Key
                    Secret The default behavior results in a Secret name matching
                    metadata.name of the Key object For example, this can be used
                    in combination with `targetNamespace` to place multiple Secrets
                    of the same name into different Namespaces from the same managing
                    Namespace.
                  type: string
                targetNamespace:
                  description: TargetNamespace optionally specifies the namespace
                    the Key Secret is provisioned to The default behavior results
                    in a Secret namespace matching the metadata.namespace of the Key
                    object This can be used to achieve a "namespace delegation" pattern
                  type: string
              type: object
          required:
          - repositoryRef
          type: object
        status:
          description: KeyStatus defines the observed state of Key
          properties:
            gitHubKeyID:
              description: GitHubKeyID stores the GitHub API ID of the Key. It is
                used to ensure deletion of the proper GitHub API Object.
              format: int64
              type: integer
            gitHubOrganization:
              description: GitHubOrganization stores the current organization expected
                to contain the applicable repository. It is used to ensure proper
                deletion in absence of a valid `KeySpec.RepositoryRef`.
              type: string
            gitHubRepository:
              description: GitHubRepository stores the current repository the key
                is applicable for. It is used to ensure proper deletion in absence
                of a valid `KeySpec.RepositoryRef`.
              type: string
            publicKey:
              description: PublicKey holds the key contents matching the SSH private
                key. It is used by the Key controller to track correctness of the
                child Secret object.
              type: string
            status:
              description: Status stores the status of the Key
              type: string
            url:
              description: URL stores the URL of the Key
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
